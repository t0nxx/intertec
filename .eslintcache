[{"/home/t0ni/Desktop/intersec/src/index.tsx":"1","/home/t0ni/Desktop/intersec/src/reportWebVitals.ts":"2","/home/t0ni/Desktop/intersec/src/redux/store.ts":"3","/home/t0ni/Desktop/intersec/src/App.tsx":"4","/home/t0ni/Desktop/intersec/src/redux/reducers/rootReducer.ts":"5","/home/t0ni/Desktop/intersec/src/router.tsx":"6","/home/t0ni/Desktop/intersec/src/components/nav-bar/nav-bar.tsx":"7","/home/t0ni/Desktop/intersec/src/components/page-header/page-header.tsx":"8","/home/t0ni/Desktop/intersec/src/components/footer/footer.tsx":"9","/home/t0ni/Desktop/intersec/src/components/screens/attachment-screen/attachment-screen.tsx":"10","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/pharamaceutical-establishment.tsx":"11","/home/t0ni/Desktop/intersec/src/components/screens/review-screen/review-screen.tsx":"12","/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/index.tsx":"13","/home/t0ni/Desktop/intersec/src/redux/reducers/helper.ts":"14","/home/t0ni/Desktop/intersec/src/components/attachment/attachment.tsx":"15","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/contact-inforamtion/contact-information.tsx":"16","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/etablishment-inforamtion/establishment-information.tsx":"17","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/owner-detail/owner-detail.tsx":"18","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/location-inforamtion/location-information.tsx":"19","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/self-evaluation/self-evaluation.tsx":"20","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/partner-details/partner-details.tsx":"21","/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/actions-types.ts":"22","/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/self-evaluation.tsx":"23","/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/partner-details.tsx":"24","/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/step-number.tsx":"25","/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/owner-details.tsx":"26","/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/location-information.tsx":"27","/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/contact-information.tsx":"28","/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/establishment-information.tsx":"29","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/self-evaluation/self-evaluation-helper.ts":"30","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/partner-details/add-partner/add-partner.tsx":"31","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/owner-detail/owner-detail-helper.ts":"32","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/location-inforamtion/location-information-helper.ts":"33","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/contact-inforamtion/contact-information-helper.ts":"34","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/etablishment-inforamtion/establishment-information-helper.ts":"35","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/partner-details/add-partner/add-partner-helper.ts":"36","/home/t0ni/Desktop/intersec/src/components/submission-buttons/submission-with-cancel.tsx":"37","/home/t0ni/Desktop/intersec/src/components/submission-buttons/submission.tsx":"38","/home/t0ni/Desktop/intersec/src/components/attachment/upload-options/upload-options.tsx":"39","/home/t0ni/Desktop/intersec/src/components/attachment/drag-area/drag-area.tsx":"40"},{"size":572,"mtime":1607457970803,"results":"41","hashOfConfig":"42"},{"size":425,"mtime":1607093476651,"results":"43","hashOfConfig":"42"},{"size":238,"mtime":1607268284192,"results":"44","hashOfConfig":"42"},{"size":1384,"mtime":1607366948281,"results":"45","hashOfConfig":"42"},{"size":218,"mtime":1607266157065,"results":"46","hashOfConfig":"42"},{"size":698,"mtime":1607436207043,"results":"47","hashOfConfig":"42"},{"size":4120,"mtime":1607296827318,"results":"48","hashOfConfig":"42"},{"size":900,"mtime":1607197816593,"results":"49","hashOfConfig":"42"},{"size":1257,"mtime":1607280010810,"results":"50","hashOfConfig":"42"},{"size":454,"mtime":1607436207039,"results":"51","hashOfConfig":"42"},{"size":6936,"mtime":1607453317072,"results":"52","hashOfConfig":"42"},{"size":18615,"mtime":1607458460815,"results":"53","hashOfConfig":"42"},{"size":686,"mtime":1607343387622,"results":"54","hashOfConfig":"42"},{"size":759,"mtime":1607343500991,"results":"55","hashOfConfig":"42"},{"size":8493,"mtime":1607436207039,"results":"56","hashOfConfig":"42"},{"size":8712,"mtime":1607454043428,"results":"57","hashOfConfig":"42"},{"size":5530,"mtime":1607453963420,"results":"58","hashOfConfig":"42"},{"size":17091,"mtime":1607454074204,"results":"59","hashOfConfig":"42"},{"size":6996,"mtime":1607454058588,"results":"60","hashOfConfig":"42"},{"size":4184,"mtime":1607454793944,"results":"61","hashOfConfig":"42"},{"size":3005,"mtime":1607454539332,"results":"62","hashOfConfig":"42"},{"size":503,"mtime":1607454812000,"results":"63","hashOfConfig":"42"},{"size":770,"mtime":1607343288201,"results":"64","hashOfConfig":"42"},{"size":767,"mtime":1607343214676,"results":"65","hashOfConfig":"42"},{"size":662,"mtime":1607342298911,"results":"66","hashOfConfig":"42"},{"size":773,"mtime":1607274905605,"results":"67","hashOfConfig":"42"},{"size":834,"mtime":1607275002202,"results":"68","hashOfConfig":"42"},{"size":827,"mtime":1607274805664,"results":"69","hashOfConfig":"42"},{"size":866,"mtime":1607439707488,"results":"70","hashOfConfig":"42"},{"size":661,"mtime":1607454682616,"results":"71","hashOfConfig":"42"},{"size":16057,"mtime":1607341837267,"results":"72","hashOfConfig":"42"},{"size":2012,"mtime":1607338666527,"results":"73","hashOfConfig":"42"},{"size":913,"mtime":1607274461277,"results":"74","hashOfConfig":"42"},{"size":1245,"mtime":1607274301339,"results":"75","hashOfConfig":"42"},{"size":758,"mtime":1607266597836,"results":"76","hashOfConfig":"42"},{"size":1993,"mtime":1607341837267,"results":"77","hashOfConfig":"42"},{"size":675,"mtime":1607451368072,"results":"78","hashOfConfig":"42"},{"size":476,"mtime":1607451499220,"results":"79","hashOfConfig":"42"},{"size":538,"mtime":1607436207039,"results":"80","hashOfConfig":"42"},{"size":596,"mtime":1607436207039,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"tubce2",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"/home/t0ni/Desktop/intersec/src/index.tsx",[],["173","174","175","176","177","178","179","180"],"/home/t0ni/Desktop/intersec/src/reportWebVitals.ts",[],"/home/t0ni/Desktop/intersec/src/redux/store.ts",[],"/home/t0ni/Desktop/intersec/src/App.tsx",["181","182","183","184","185","186","187","188","189","190","191","192"],"import React from \"react\";\nimport \"./App.scss\";\nimport { Button } from \"react-bootstrap\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { faCheckSquare, faCoffee, faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\n\nimport NavBarComponent from \"./components/nav-bar/nav-bar\";\nimport PageHeaderComponent from \"./components/page-header/page-header\";\nimport EstablishmentInformationComponent from \"./components/screens/pharamaceutical-establishment/etablishment-inforamtion/establishment-information\";\nimport ContactInformationComponent from \"./components/screens/pharamaceutical-establishment/contact-inforamtion/contact-information\";\nimport PharamaceuticalEstablishmentScreen from \"./components/screens/pharamaceutical-establishment/pharamaceutical-establishment\";\nimport FooterComponent from \"./components/footer/footer\";\nimport Routes from \"./router\";\n\nlibrary.add(fab, faCheckSquare, faCoffee, faVolumeUp);\n\nfunction App() {\n  /// i will set a structure for router later , just put this now for continue\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBarComponent />\n        <PageHeaderComponent />\n        <Routes />\n\n        <FooterComponent />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/t0ni/Desktop/intersec/src/redux/reducers/rootReducer.ts",[],"/home/t0ni/Desktop/intersec/src/router.tsx",[],"/home/t0ni/Desktop/intersec/src/components/nav-bar/nav-bar.tsx",["193"],"import React from \"react\";\nimport \"./nav-bar.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMicrophone,\n  faPhoneAlt,\n  faQuestionCircle,\n  faSearch,\n  faSitemap,\n  faVolumeUp,\n  faLowVision,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Badge, Dropdown, Nav, Navbar, Image } from \"react-bootstrap\";\nimport logo from \"../../logo.png\";\n\n// Import images\nimport name from \"../../assets/name.jpg\";\nimport bell from \"../../assets/bell.svg\";\n\nexport default function NavBarComponent() {\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"light\" bg=\"light\" sticky=\"top\">\n      <Navbar.Brand href=\"#home\">\n        <img\n          src={logo}\n          width=\"200\"\n          height=\"50\"\n          className=\"d-inline-block align-top ml-5\"\n          alt=\"React Bootstrap logo\"\n        />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse className=\"justify-content-end\" id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\" />\n        <Nav>\n          <div className=\"toggleLang\">\n            <a>عربي</a>\n          </div>\n          <Nav className=\"headerIcons\">\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon icon={faVolumeUp} size=\"sm\" color=\"black\" className=\"mr-2 ml-2\" />\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon icon={faSitemap} size=\"sm\" color=\"black\" className=\"mr-2 ml-2\" />\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon icon={faPhoneAlt} size=\"sm\" color=\"black\" className=\"mr-2 ml-2\" />\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon\n                  icon={faQuestionCircle}\n                  size=\"sm\"\n                  color=\"black\"\n                  className=\"mr-2 ml-2\"\n                />\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon icon={faLowVision} size=\"sm\" color=\"black\" className=\"mr-2 ml-2\" />\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon icon={faSearch} size=\"sm\" color=\"black\" className=\"mr-2 ml-2\" />\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon\n                  icon={faMicrophone}\n                  size=\"sm\"\n                  color=\"black\"\n                  className=\"mr-2 ml-2\"\n                />\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n          {/* Notifications drop menu */}\n          <Dropdown>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"notifications\">\n              <Image src={bell} />\n              <Badge pill variant=\"danger\">\n                4\n              </Badge>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item href=\"#/action-1\">test action</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-2\">test Another action</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-3\">test Something else</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          {/* User drop menu */}\n          <Dropdown>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"user\">\n              <strong>User Name</strong>\n              <Image src={name} roundedCircle />\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item href=\"#/action-1\">test action</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-2\">test Another action</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-3\">test Something else</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","/home/t0ni/Desktop/intersec/src/components/page-header/page-header.tsx",[],"/home/t0ni/Desktop/intersec/src/components/footer/footer.tsx",["194","195"],"import React from \"react\";\nimport \"./footer.scss\";\nimport { Navbar, Image, ProgressBar, Row, Button } from \"react-bootstrap\";\n\n// Import images\nimport applicationIc from \"../../assets/applicationIc.svg\";\nimport attachmentIc from \"../../assets/attachmentIc.svg\";\nimport previewIc from \"../../assets/previewIc.svg\";\nimport info from \"../../assets/info.svg\";\nimport flag from \"../../assets/flag.svg\";\n\nexport default function FooterComponent() {\n  return (\n    <Navbar expand=\"lg\" fixed=\"bottom\" className=\"footer\">\n      <div className=\"stickyIcons\">\n        <Image src={info} className=\"infoIc\" />\n        <Image src={flag} className=\"flagIc\" />\n      </div>\n      <ProgressBar variant=\"success\" now={20} className=\"progress\" />\n      <Row className=\"statistics-container\">\n        <div>\n          <Image src={applicationIc} />\n          <span className=\"active\">Application form</span>\n        </div>\n        <div>\n          <Image src={attachmentIc} />\n          <span>Attachement</span>\n        </div>\n        <div>\n          <Image src={previewIc} />\n          <span>Preview </span>\n        </div>\n        <div className=\"complete\">\n          <span>Complete progress</span>\n          <strong>8 %</strong>\n        </div>\n      </Row>\n    </Navbar>\n  );\n}\n","/home/t0ni/Desktop/intersec/src/components/screens/attachment-screen/attachment-screen.tsx",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/pharamaceutical-establishment.tsx",["196","197"],"import React, { useState } from \"react\";\nimport { Accordion, Card, Container, Row, Image } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ActionTypes, StateSelectorInterface } from \"../../../redux/reducers/helper\";\nimport \"./pharamaceutical-establishment.scss\";\nimport penImage from \"../../../assets/pen.svg\";\nimport penImageWhite from \"../../../assets/pen-white.svg\";\nimport contactImage from \"../../../assets/contact.svg\";\nimport contactImageWhite from \"../../../assets/contact-white.svg\";\nimport locationImage from \"../../../assets/location.svg\";\nimport locationImageWhite from \"../../../assets/location-white.svg\";\nimport ownerImage from \"../../../assets/owner.svg\";\nimport ownerImageWhite from \"../../../assets/owner-white.svg\";\nimport checkImage from \"../../../assets/check.svg\";\nimport checkImageWhite from \"../../../assets/check-white.svg\";\nimport checked from \"../../../assets/checked.svg\";\n\nimport ContactInformationComponent from \"./contact-inforamtion/contact-information\";\nimport EstablishmentInformationComponent from \"./etablishment-inforamtion/establishment-information\";\nimport OwnerDetailComponent from \"./owner-detail/owner-detail\";\nimport LocationInformationComponent from \"./location-inforamtion/location-information\";\nimport SelfEvaluationComponent from \"./self-evaluation/self-evaluation\";\nimport PartnerDetailsComponent from \"./partner-details/partner-details\";\n\nconst PharamaceuticalEstablishmentScreen = () => {\n  const state = useSelector((s: StateSelectorInterface) => s.pharmaceuticalEstablishment);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const dispatch = useDispatch();\n  const setCurrentStep = (step: string) => {\n    // set current step in global state\n    dispatch({\n      type: ActionTypes.PharmaceuticalEstablishmentActionTypes.SET_STEP_NUMBER,\n      payload: step,\n    });\n  };\n  return (\n    <Container fluid>\n      <Accordion activeKey={state.stepNumberReducer.toString()}>\n        {/* <Accordion> */}\n        <span className=\"column\"> </span>\n        <Card className=\"headCard\">\n          <Accordion.Toggle\n            as={Card.Header}\n            className={state.establishmentInformationsReducer.isComplete ? \"done\" : \"\"}\n            eventKey=\"0\"\n            onClick={() => setCurrentStep(\"0\")}\n          >\n            <Row>\n              <Image src={penImage} className=\"ml-3 mr-4 greenIc\" />\n              <Image src={penImageWhite} className=\"ml-3 mr-4 whiteIc\" />\n              <h3 className=\"text-success\">Establishment Information </h3>\n              <Image src={checked} className=\"checked\" />\n            </Row>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <EstablishmentInformationComponent isForReviewPage={false} />\n              {/* <span className=\"ta7nika\"> </span> */}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <div className=\"divider\" />\n        <Card className=\"headCard\">\n          <Accordion.Toggle\n            as={Card.Header}\n            className={state.contactInformationsReducer.isComplete ? \"done\" : \"\"}\n            eventKey=\"1\"\n            onClick={() => setCurrentStep(\"1\")}\n          >\n            <Row>\n              <Image src={contactImage} className=\"ml-3 mr-4 greenIc\" />\n              <Image src={contactImageWhite} className=\"ml-3 mr-4 whiteIc\" />\n              <h3 className=\"text-success\">Contact Information </h3>\n              <Image src={checked} className=\"checked\" />\n            </Row>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"1\">\n            <ContactInformationComponent isForReviewPage={false} />\n          </Accordion.Collapse>\n        </Card>\n        <div className=\"divider\" />\n        <Card className=\"headCard\">\n          <Accordion.Toggle\n            as={Card.Header}\n            className={state.locationInformationsReducer.isComplete ? \"done\" : \"\"}\n            eventKey=\"2\"\n            onClick={() => setCurrentStep(\"2\")}\n          >\n            <Row>\n              <Image src={locationImage} className=\"ml-3 mr-4 greenIc\" />\n              <Image src={locationImageWhite} className=\"ml-3 mr-4 whiteIc\" />\n              <h3 className=\"text-success\">Location Information </h3>\n              <Image src={checked} className=\"checked\" />\n            </Row>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"2\">\n            <LocationInformationComponent isForReviewPage={false} />\n          </Accordion.Collapse>\n        </Card>\n        <div className=\"divider\" />\n        <Card className=\"headCard\">\n          <Accordion.Toggle\n            as={Card.Header}\n            className={state.ownerDetailsReducer.isComplete ? \"done\" : \"\"}\n            eventKey=\"3\"\n            onClick={() => setCurrentStep(\"3\")}\n          >\n            <Row>\n              <Image src={ownerImage} className=\"ml-3 mr-4 greenIc\" />\n              <Image src={ownerImageWhite} className=\"ml-3 mr-4 whiteIc\" />\n              <h3 className=\"text-success\">Owner Details </h3>\n              <Image src={checked} className=\"checked\" />\n            </Row>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"3\">\n            <OwnerDetailComponent isForReviewPage={false} />\n          </Accordion.Collapse>\n        </Card>\n        <div className=\"divider\" />\n        <Card className=\"headCard\">\n          <Accordion.Toggle\n            as={Card.Header}\n            className={state.partnerDetailsReducer.isComplete ? \"done\" : \"\"}\n            eventKey=\"4\"\n            onClick={() => setCurrentStep(\"4\")}\n          >\n            <Row>\n              <Image src={ownerImage} className=\"ml-3 mr-4 greenIc\" />\n              <Image src={ownerImageWhite} className=\"ml-3 mr-4 whiteIc\" />\n              <h3 className=\"text-success\">Partner Details </h3>\n              <Image src={checked} className=\"checked\" />\n            </Row>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"4\">\n            <PartnerDetailsComponent />\n          </Accordion.Collapse>\n        </Card>\n        <div className=\"divider\" />\n        <Card className=\"headCard\">\n          <Accordion.Toggle\n            as={Card.Header}\n            className={state.selfEvaluationsReducer.isComplete ? \"done\" : \"\"}\n            eventKey=\"5\"\n            onClick={() => setCurrentStep(\"5\")}\n          >\n            <Row>\n              <Image src={checkImage} className=\"ml-3 mr-4 greenIc\" />\n              <Image src={checkImageWhite} className=\"ml-3 mr-4 whiteIc\" />\n              <h3 className=\"text-success\">Self Evaluation </h3>\n              <Image src={checked} className=\"checked\" />\n            </Row>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"5\">\n            <SelfEvaluationComponent />\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </Container>\n  );\n};\n\nexport default PharamaceuticalEstablishmentScreen;\n","/home/t0ni/Desktop/intersec/src/components/screens/review-screen/review-screen.tsx",["198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223"],"/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/index.tsx",[],"/home/t0ni/Desktop/intersec/src/redux/reducers/helper.ts",[],"/home/t0ni/Desktop/intersec/src/components/attachment/attachment.tsx",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/contact-inforamtion/contact-information.tsx",["224","225","226","227","228","229"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Card, Col, Container, Form, Row, Image } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { FormInputsInterface, formSchema } from \"./contact-information-helper\";\n\nimport \"./contact-information.scss\";\nimport \"../shared/shared.scss\";\n\nimport email from \"../../../../assets/mail.svg\";\nimport phone from \"../../../../assets/phone.svg\";\nimport arrow from \"../../../../assets/arrow-white.svg\";\nimport { ActionTypes, StateSelectorInterface } from \"../../../../redux/reducers/helper\";\nimport SubmissionButton from \"../../../submission-buttons/submission\";\nimport SubmissionButtonWithCancel from \"../../../submission-buttons/submission-with-cancel\";\nimport { IProps } from \"../shared/components-props\";\n\nconst ContactInformationComponent = (props: IProps) => {\n  const { data } = useSelector(\n    (s: StateSelectorInterface) => s.pharmaceuticalEstablishment.contactInformationsReducer\n  );\n\n  const { register, handleSubmit, errors, formState, reset } = useForm({\n    resolver: yupResolver(formSchema),\n    mode: \"all\",\n  });\n  const changeParentToggleEvent = () => {\n    if (props.isForReviewPage) {\n      props.onSubmitOrCancelEvent();\n    }\n  };\n  const onCancelHandler = () => changeParentToggleEvent();\n\n  useEffect(() => {\n    // bind inputs values with it's state\n    // this will be very helpfull when we want reuse the component with its values\n    reset(data);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reset]);\n\n  const dispatch = useDispatch();\n  const onSubmit = (values: FormInputsInterface) => {\n    if (formState.isValid) {\n      dispatch({\n        type: ActionTypes.PharmaceuticalEstablishmentActionTypes.SET_CONTACT_INFORMATION,\n        payload: values,\n      });\n      // move to next step\n      dispatch({\n        type: ActionTypes.PharmaceuticalEstablishmentActionTypes.NEXT_STEP_NUMBER,\n      });\n      changeParentToggleEvent();\n    }\n  };\n  return (\n    /**\n     * this should be abstacted  . later i will bake a style for card only usin styled component\n     */\n    <Card>\n      <Card.Body>\n        <Container>\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>Retrieve information contact from your profile</Form.Label>\n                <div className=\"radioBtns\">\n                  <Form.Check\n                    type=\"radio\"\n                    name=\"retrieveInformation\"\n                    label=\"Yes\"\n                    id=\"ri\"\n                    value=\"yes\"\n                    ref={register}\n                    custom\n                  />\n                  <Form.Check\n                    type=\"radio\"\n                    name=\"retrieveInformation\"\n                    label=\"No\"\n                    id=\"ri2\"\n                    value=\"no\"\n                    ref={register}\n                    custom\n                    checked\n                  />\n                </div>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>\n                  Contact Name <span className=\"required\">*</span>{\" \"}\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\" Contact Name\"\n                  name=\"contactName\"\n                  ref={register}\n                  isValid={formState.touched.contactName && !errors.contactName}\n                  isInvalid={errors.contactName}\n                />\n                <span className=\"text-danger\">{errors.contactName?.message}</span>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Designation <span className=\"required\">*</span>{\" \"}\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\" Designation \"\n                  name=\"designation\"\n                  ref={register}\n                  isValid={formState.touched.designation && !errors.designation}\n                  isInvalid={errors.designation}\n                />\n                <span className=\"text-danger\">{errors.designation?.message}</span>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>\n                  Primary Email <span className=\"required\">*</span>{\" \"}\n                </Form.Label>\n                <div className=\"inputWithIcon\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Primary Email\"\n                    name=\"primaryEmail\"\n                    ref={register}\n                    isValid={formState.touched.primaryEmail && !errors.primaryEmail}\n                    isInvalid={errors.primaryEmail}\n                  />\n                  <Image src={email} />\n                </div>\n                <span className=\"text-danger\">{errors.primaryEmail?.message}</span>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Alternative Email <span className=\"required\">*</span>{\" \"}\n                </Form.Label>\n                <div className=\"inputWithIcon\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"  Alternative Email \"\n                    name=\"alternativeEmail\"\n                    ref={register}\n                    isValid={formState.touched.alternativeEmail && !errors.alternativeEmail}\n                    isInvalid={errors.alternativeEmail}\n                  />\n                  <Image src={email} />\n                </div>\n                <span className=\"text-danger\">{errors.alternativeEmail?.message}</span>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>\n                  Contact Number <span className=\"required\">*</span>{\" \"}\n                </Form.Label>\n                <div className=\"inputWithIcon\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\" +971 000 000 \"\n                    name=\"contactNumber\"\n                    ref={register}\n                    isValid={formState.touched.contactNumber && !errors.contactNumber}\n                    isInvalid={errors.contactNumber}\n                  />\n                  <Image src={phone} />\n                </div>\n                <span className=\"text-danger\">{errors.contactNumber?.message}</span>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Alternative Contact Number <span className=\"required\">*</span>{\" \"}\n                </Form.Label>\n                <div className=\"inputWithIcon\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\" +971 000 000  \"\n                    name=\"alternativeContactNumber\"\n                    ref={register}\n                    // eslint-disable-next-line max-len\n                    isValid={\n                      formState.touched.alternativeContactNumber && !errors.alternativeContactNumber\n                    }\n                    isInvalid={errors.alternativeContactNumber}\n                  />\n                  <Image src={phone} />\n                </div>\n                <span className=\"text-danger\">{errors.alternativeContactNumber?.message}</span>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} xs=\"6\" controlId=\"formGridEmail\">\n                <Form.Label> Fax </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Fax\"\n                  name=\"fax\"\n                  ref={register}\n                  isValid={formState.touched.fax && !errors.fax}\n                  isInvalid={errors.fax}\n                />\n                <span className=\"text-danger\">{errors.fax?.message}</span>\n              </Form.Group>\n            </Form.Row>\n            {props.isForReviewPage ? (\n              <SubmissionButtonWithCancel onCancel={onCancelHandler} />\n            ) : (\n              <SubmissionButton />\n            )}\n          </Form>\n        </Container>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ContactInformationComponent;\n","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/etablishment-inforamtion/establishment-information.tsx",["230","231","232","233","234","235"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Card, Col, Form, Image, Row } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport { ActionTypes, StateSelectorInterface } from \"../../../../redux/reducers/helper\";\nimport { FormInputsInterface, formSchema } from \"./establishment-information-helper\";\nimport \"./establishment-information.scss\";\nimport { IProps } from \"../shared/components-props\";\nimport SubmissionButtonWithCancel from \"../../../submission-buttons/submission-with-cancel\";\nimport SubmissionButton from \"../../../submission-buttons/submission\";\n\nconst EstablishmentInformationComponent = (props: IProps) => {\n  const { data } = useSelector(\n    (s: StateSelectorInterface) => s.pharmaceuticalEstablishment.establishmentInformationsReducer\n  );\n\n  const { register, handleSubmit, errors, formState, reset } = useForm({\n    resolver: yupResolver(formSchema),\n    mode: \"all\",\n  });\n  const changeParentToggleEvent = () => {\n    if (props.isForReviewPage) {\n      props.onSubmitOrCancelEvent();\n    }\n  };\n\n  const onCancelHandler = () => changeParentToggleEvent();\n\n  useEffect(() => {\n    // bind inputs values with it's state\n    // this will be very helpfull when we want reuse the component with its values\n    reset(data);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reset]);\n\n  const dispatch = useDispatch();\n  const onSubmit = (values: FormInputsInterface) => {\n    if (formState.isValid) {\n      dispatch({\n        type: ActionTypes.PharmaceuticalEstablishmentActionTypes.SET_ESTABLISHMENT_INFORMATION,\n        payload: values,\n      });\n      // move to next step\n      dispatch({\n        type: ActionTypes.PharmaceuticalEstablishmentActionTypes.NEXT_STEP_NUMBER,\n      });\n      changeParentToggleEvent();\n    }\n  };\n\n  return (\n    /**\n     * this should be abstacted  . later i will bake a style for card only usin styled component\n     */\n    <Card>\n      <Card.Body>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"establishmentName\">\n              <Form.Label>\n                Establishment Name <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\" Establishment Name\"\n                name=\"establishmentName\"\n                ref={register}\n                isValid={formState.touched.establishmentName && !errors.establishmentName}\n                isInvalid={errors.establishmentName}\n              />\n              <span className=\"text-danger\">{errors.establishmentName?.message}</span>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridPassword\">\n              <Form.Label>\n                Establishment Name (Arabic) <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\" Establishment Name\"\n                name=\"establishmentNameArabic\"\n                ref={register}\n                isValid={\n                  formState.touched.establishmentNameArabic && !errors.establishmentNameArabic\n                }\n                isInvalid={errors.establishmentNameArabic}\n              />\n              <span className=\"text-danger\">{errors.establishmentNameArabic?.message}</span>\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>\n                Establishment Type <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"establishmentType\"\n                ref={register}\n                isValid={formState.touched.establishmentType && !errors.establishmentType}\n                isInvalid={errors.establishmentType}\n              >\n                <option disabled selected value=\"\">\n                  Establishment Type\n                </option>\n                <option> Establishment Type 1</option>\n                <option> Establishment Type 2</option>\n                <option> Establishment Type 3</option>\n              </Form.Control>\n              <span className=\"text-danger\">{errors.establishmentType?.message}</span>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>\n                Category <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"Category\"\n                ref={register}\n                isValid={formState.touched.Category && !errors.Category}\n                isInvalid={errors.Category}\n              >\n                <option disabled selected value=\"\">\n                  Category\n                </option>\n                <option>Category 1 </option>\n                <option>Category 2 </option>\n                <option>Category 3 </option>\n              </Form.Control>\n              <span className=\"text-danger\">{errors.Category?.message}</span>\n            </Form.Group>\n          </Form.Row>\n          {props.isForReviewPage ? (\n            <SubmissionButtonWithCancel onCancel={onCancelHandler} />\n          ) : (\n            <SubmissionButton />\n          )}\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default EstablishmentInformationComponent;\n","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/owner-detail/owner-detail.tsx",["236","237"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Image, Card, Col, Container, Form, Row, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { FormInputsInterface, formSchema } from \"./owner-detail-helper\";\nimport \"./owner-detail.scss\";\nimport \"../shared/shared.scss\";\n\n// Import images\nimport userPhoto from \"../../../../assets/userPhoto.svg\";\nimport upload from \"../../../../assets/upload.svg\";\nimport email from \"../../../../assets/mail.svg\";\nimport phone from \"../../../../assets/phone.svg\";\nimport arrow from \"../../../../assets/arrow-white.svg\";\nimport { ActionTypes, StateSelectorInterface } from \"../../../../redux/reducers/helper\";\nimport AttachmentComponent from \"../../../attachment/attachment\";\nimport { IProps } from \"../shared/components-props\";\nimport SubmissionButton from \"../../../submission-buttons/submission\";\nimport SubmissionButtonWithCancel from \"../../../submission-buttons/submission-with-cancel\";\n\nconst OwnerDetailComponent = (props: IProps) => {\n  const { data } = useSelector(\n    (s: StateSelectorInterface) => s.pharmaceuticalEstablishment.ownerDetailsReducer\n  );\n\n  const { register, handleSubmit, errors, formState, reset } = useForm({\n    resolver: yupResolver(formSchema),\n    mode: \"all\",\n  });\n  const changeParentToggleEvent = () => {\n    if (props.isForReviewPage) {\n      props.onSubmitOrCancelEvent();\n    }\n  };\n  const onCancelHandler = () => changeParentToggleEvent();\n\n  useEffect(() => {\n    // bind inputs values with it's state\n    // this will be very helpfull when we want reuse the component with its values\n    reset(data);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reset]);\n  const dispatch = useDispatch();\n  const onSubmit = (values: FormInputsInterface) => {\n    if (formState.isValid) {\n      dispatch({\n        type: ActionTypes.PharmaceuticalEstablishmentActionTypes.SET_OWNER_DETAILS,\n        payload: values,\n      });\n      // move to next step\n      dispatch({\n        type: ActionTypes.PharmaceuticalEstablishmentActionTypes.NEXT_STEP_NUMBER,\n      });\n      changeParentToggleEvent();\n    }\n  };\n  return (\n    /**\n     * this should be abstacted  . later i will bake a style for card only usin styled component\n     */\n    <Container fluid>\n      <Card>\n        <Card.Body>\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Retrieve information contact from your profile</Form.Label>\n                <div className=\"radioButtons\">\n                  <div className=\"form-check\">\n                    <label htmlFor=\"getContactData\">\n                      <input\n                        name=\"getInfoFromProfile\"\n                        type=\"radio\"\n                        id=\"getContactData\"\n                        className=\"form-check-input\"\n                        value=\"yes\"\n                        ref={register}\n                        checked\n                      />\n                      Yes\n                      <i className=\"checkMark\"> </i>\n                    </label>\n                  </div>\n                  <div className=\"form-check\">\n                    <label htmlFor=\"getContactData2\">\n                      <input\n                        name=\"getInfoFromProfile\"\n                        type=\"radio\"\n                        id=\"getContactData2\"\n                        className=\"form-check-input\"\n                        value=\"no\"\n                        ref={register}\n                      />\n                      No\n                      <i className=\"checkMark\"> </i>\n                    </label>\n                  </div>\n                </div>\n              </Form.Group>\n            </Form.Row>\n            <Row>\n              <Col md={4}>\n                <Form.Group controlId=\"formGridEmail\" className=\"uploadPhoto\">\n                  <Image src={userPhoto} />\n                  <Button variant=\"success\">\n                    <Image src={upload} /> Upload\n                  </Button>\n                </Form.Group>\n              </Col>\n              <Col md={4}>\n                <Form.Group controlId=\"formGridEmail\">\n                  <Form.Label>\n                    Title <span className=\"required\">*</span>\n                  </Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    name=\"tite\"\n                    ref={register}\n                    isValid={formState.touched.tite && !errors.tite}\n                    isInvalid={errors.tite}\n                  >\n                    <option disabled selected value=\"\">\n                      Title\n                    </option>\n                    <option>...</option>\n                    <option>...</option>\n                    <option>...</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col md={4}>\n                <Form.Group>\n                  <Form.Label>\n                    Gender <span className=\"required\">*</span>\n                  </Form.Label>\n                  <div className=\"radioButtons\">\n                    <div className=\"form-check\">\n                      <label htmlFor=\"gender\">\n                        <input\n                          name=\"gender\"\n                          type=\"radio\"\n                          id=\"gender\"\n                          className=\"form-check-input\"\n                          value=\"male\"\n                          ref={register}\n                        />\n                        Male\n                        <i className=\"checkMark\"> </i>\n                      </label>\n                    </div>\n                    <div className=\"form-check\">\n                      <label htmlFor=\"gender2\">\n                        <input\n                          name=\"gender\"\n                          type=\"radio\"\n                          id=\"gender2\"\n                          className=\"form-check-input\"\n                          value=\"female\"\n                          ref={register}\n                          checked\n                        />\n                        Female\n                        <i className=\"checkMark\"> </i>\n                      </label>\n                    </div>\n                  </div>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>\n                  First name <span className=\"required\">*</span>\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"First Name\"\n                  name=\"fName\"\n                  ref={register}\n                  isValid={formState.touched.fName && !errors.fName}\n                  isInvalid={errors.fName}\n                />\n                <span className=\"text-danger\">{errors.fName?.message}</span>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Middle name <span className=\"required\">*</span>\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Middle name\"\n                  name=\"mName\"\n                  ref={register}\n                  isValid={formState.touched.mName && !errors.mName}\n                  isInvalid={errors.mName}\n                />\n                <span className=\"text-danger\">{errors.mName?.message}</span>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Last Name <span className=\"required\">*</span>\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Last Name\"\n                  name=\"lName\"\n                  ref={register}\n                  isValid={formState.touched.lName && !errors.lName}\n                  isInvalid={errors.lName}\n                />\n                <span className=\"text-danger\">{errors.lName?.message}</span>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>\n                  First name (Arabic) <span className=\"required\">*</span>\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"First Name (Arabic)\"\n                  name=\"fNameAr\"\n                  ref={register}\n                  isValid={formState.touched.fNameAr && !errors.fNameAr}\n                  isInvalid={errors.fNameAr}\n                />\n                <span className=\"text-danger\">{errors.fNameAr?.message}</span>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Middle name (Arabic) <span className=\"required\">*</span>\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Middle name (Arabic)\"\n                  name=\"mNameAr\"\n                  ref={register}\n                  isValid={formState.touched.mNameAr && !errors.mNameAr}\n                  isInvalid={errors.mNameAr}\n                />\n                <span className=\"text-danger\">{errors.mNameAr?.message}</span>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Last Name (Arabic) <span className=\"required\">*</span>\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Last Name (Arabic)\"\n                  name=\"lNameAr\"\n                  ref={register}\n                  isValid={formState.touched.lNameAr && !errors.lNameAr}\n                  isInvalid={errors.lNameAr}\n                />\n                <span className=\"text-danger\">{errors.lNameAr?.message}</span>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Share Percentage <span className=\"required\">*</span>\n                </Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  min=\"1\"\n                  placeholder=\"50%\"\n                  name=\"sharePercentage\"\n                  ref={register}\n                  isValid={formState.touched.sharePercentage && !errors.sharePercentage}\n                  isInvalid={errors.sharePercentage}\n                />\n                <span className=\"text-danger\">{errors.sharePercentage?.message}</span>\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  UAE Citzen <span className=\"required\">*</span>\n                </Form.Label>\n                <div className=\"radioButtons\">\n                  <div className=\"form-check\">\n                    <label htmlFor=\"UAECitzen\">\n                      <input\n                        name=\"uaeCitzen\"\n                        type=\"radio\"\n                        id=\"UAECitzen\"\n                        className=\"form-check-input\"\n                        value=\"yes\"\n                        ref={register}\n                        checked\n                      />\n                      Yes\n                      <i className=\"checkMark\"> </i>\n                    </label>\n                  </div>\n                  <div className=\"form-check\">\n                    <label htmlFor=\"UAECitzen2\">\n                      <input\n                        name=\"uaeCitzen\"\n                        type=\"radio\"\n                        id=\"UAECitzen2\"\n                        className=\"form-check-input\"\n                        value=\"no\"\n                        ref={register}\n                      />\n                      No\n                      <i className=\"checkMark\"> </i>\n                    </label>\n                  </div>\n                </div>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridState\">\n                <Form.Label>\n                  Nationality <span className=\"required\">*</span>\n                </Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"nationality\"\n                  ref={register}\n                  isValid={formState.touched.nationality && !errors.nationality}\n                  isInvalid={errors.nationality}\n                >\n                  <option disabled selected value=\"\">\n                    Nationality\n                  </option>\n                  <option>...</option>\n                  <option>...</option>\n                  <option>...</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Passport No <span className=\"required\">*</span>\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"No\"\n                  name=\"passportNo\"\n                  ref={register}\n                  isValid={formState.touched.passportNo && !errors.passportNo}\n                  isInvalid={errors.passportNo}\n                />\n                <span className=\"text-danger\">{errors.passportNo?.message}</span>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Emirates ID <span className=\"required\">*</span>\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Emirates ID\"\n                  name=\"emiratesId\"\n                  ref={register}\n                  isValid={formState.touched.emiratesId && !errors.emiratesId}\n                  isInvalid={errors.emiratesId}\n                />\n                <span className=\"text-danger\">{errors.emiratesId?.message}</span>\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Family Book No <span className=\"required\">*</span>\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"No\"\n                  name=\"familyBookNo\"\n                  ref={register}\n                  isValid={formState.touched.familyBookNo && !errors.familyBookNo}\n                  isInvalid={errors.familyBookNo}\n                />\n                <span className=\"text-danger\">{errors.familyBookNo?.message}</span>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row className=\"splitTitle\">\n              <h5>Contact information</h5>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>\n                  Contact Number <span className=\"required\">*</span>\n                </Form.Label>\n                <div className=\"inputWithIcon\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Contact\"\n                    name=\"contactNo\"\n                    ref={register}\n                    isValid={formState.touched.contactNo && !errors.contactNo}\n                    isInvalid={errors.contactNo}\n                  />\n                  <span className=\"text-danger\">{errors.contactNo?.message}</span>\n                  <Image src={phone} />\n                </div>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Primary Email\n                  <span className=\"required\">*</span>\n                </Form.Label>\n                <div className=\"inputWithIcon\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Primary Email\"\n                    name=\"primaryEmail\"\n                    ref={register}\n                    isValid={formState.touched.primaryEmail && !errors.primaryEmail}\n                    isInvalid={errors.primaryEmail}\n                  />\n                  <span className=\"text-danger\">{errors.primaryEmail?.message}</span>\n                  <Image src={email} />\n                </div>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row className=\"splitTitle\">\n              <h5>Attachments</h5>\n            </Form.Row>\n            <AttachmentComponent />\n            {props.isForReviewPage ? (\n              <SubmissionButtonWithCancel onCancel={onCancelHandler} />\n            ) : (\n              <SubmissionButton />\n            )}\n          </Form>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default OwnerDetailComponent;\n","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/location-inforamtion/location-information.tsx",["238","239","240","241","242","243","244","245"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Card, Col, Container, Form, Image, Row } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { FormInputsInterface, formSchema } from \"./location-information-helper\";\nimport arrow from \"../../../../assets/arrow-white.svg\";\nimport map from \"../../../../assets/map.svg\";\n\nimport \"./location-information.scss\";\nimport { ActionTypes, StateSelectorInterface } from \"../../../../redux/reducers/helper\";\nimport { IProps } from \"../shared/components-props\";\nimport SubmissionButtonWithCancel from \"../../../submission-buttons/submission-with-cancel\";\nimport SubmissionButton from \"../../../submission-buttons/submission\";\n\nconst LocationInformationComponent = (props: IProps) => {\n  const { data } = useSelector(\n    (s: StateSelectorInterface) => s.pharmaceuticalEstablishment.locationInformationsReducer\n  );\n\n  const { register, handleSubmit, errors, formState, reset } = useForm({\n    resolver: yupResolver(formSchema),\n    mode: \"all\",\n  });\n  const changeParentToggleEvent = () => {\n    if (props.isForReviewPage) {\n      props.onSubmitOrCancelEvent();\n    }\n  };\n  const onCancelHandler = () => changeParentToggleEvent();\n\n  useEffect(() => {\n    // bind inputs values with it's state\n    // this will be very helpfull when we want reuse the component with its values\n    reset(data);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reset]);\n  const dispatch = useDispatch();\n  const onSubmit = (values: FormInputsInterface) => {\n    if (formState.isValid) {\n      dispatch({\n        type: ActionTypes.PharmaceuticalEstablishmentActionTypes.SET_LOACTION_INFORMATION,\n        payload: values,\n      });\n      // move to next step\n      dispatch({\n        type: ActionTypes.PharmaceuticalEstablishmentActionTypes.NEXT_STEP_NUMBER,\n      });\n      changeParentToggleEvent();\n    }\n  };\n\n  return (\n    /**\n     * this should be abstacted  . later i will bake a style for card only usin styled component\n     */\n    <Card>\n      <Card.Body>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>\n                Emirate <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"emirate\"\n                ref={register}\n                isValid={formState.touched.emirate && !errors.emirate}\n                isInvalid={errors.emirate}\n              >\n                <option disabled selected value=\"\">\n                  Eemirate\n                </option>\n                <option> Type 1</option>\n                <option> Type 2</option>\n                <option> Type 3</option>\n              </Form.Control>\n              <span className=\"text-danger\">{errors.emirate?.message}</span>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridPassword\">\n              <Form.Label>\n                Area <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\" Area\"\n                name=\"area\"\n                ref={register}\n                isValid={formState.touched.area && !errors.area}\n                isInvalid={errors.area}\n              />\n              <span className=\"text-danger\">{errors.area?.message}</span>\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"establishmentName\">\n              <Form.Label>\n                Street <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\" Street \"\n                name=\"street\"\n                ref={register}\n                isValid={formState.touched.street && !errors.street}\n                isInvalid={errors.street}\n              />\n              <span className=\"text-danger\">{errors.street?.message}</span>\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"establishmentName\">\n              <Form.Label>\n                Po Box <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\" Po Box\"\n                name=\"poBox\"\n                ref={register}\n                isValid={formState.touched.poBox && !errors.poBox}\n                isInvalid={errors.poBox}\n              />\n              <span className=\"text-danger\">{errors.poBox?.message}</span>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"establishmentName\">\n              <Form.Label>\n                Building Name <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\" Building Name\"\n                name=\"buildingName\"\n                ref={register}\n                isValid={formState.touched.buildingName && !errors.buildingName}\n                isInvalid={errors.buildingName}\n              />\n              <span className=\"text-danger\">{errors.buildingName?.message}</span>\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"establishmentName\">\n              <Form.Label>\n                Building No <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\" Building No\"\n                name=\"buildingNo\"\n                ref={register}\n                isValid={formState.touched.buildingNo && !errors.buildingNo}\n                isInvalid={errors.buildingNo}\n              />\n              <span className=\"text-danger\">{errors.buildingNo?.message}</span>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"establishmentName\">\n              <Form.Label>\n                Google Map Url <span className=\"required\">*</span>\n              </Form.Label>\n\n              <div className=\"inputWithIcon\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"  Google Map Url\"\n                  name=\"mapUrl\"\n                  ref={register}\n                  isValid={formState.touched.mapUrl && !errors.mapUrl}\n                  isInvalid={errors.mapUrl}\n                />\n                <Image src={map} />\n              </div>\n              <span className=\"text-danger\">{errors.mapUrl?.message}</span>\n            </Form.Group>\n          </Form.Row>\n          {props.isForReviewPage ? (\n            <SubmissionButtonWithCancel onCancel={onCancelHandler} />\n          ) : (\n            <SubmissionButton />\n          )}\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default LocationInformationComponent;\n","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/self-evaluation/self-evaluation.tsx",["246","247","248","249","250"],"import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Card, Form, Row, Button, Table } from \"react-bootstrap\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\n\nimport { FormInputsInterface, formSchema } from \"./self-evaluation-helper\";\n\nimport \"./self-evaluation.scss\";\nimport \"../shared/shared.scss\";\n\n// Import images\nimport { ActionTypes } from \"../../../../redux/reducers/helper\";\n\nconst SelfEvaluationComponent = () => {\n  const { register, handleSubmit, errors, formState } = useForm({\n    resolver: yupResolver(formSchema),\n    mode: \"all\",\n  });\n\n  const dispatch = useDispatch();\n  const onSubmit = (data: FormInputsInterface) => {\n    if (formState.isValid) {\n      dispatch({\n        type: ActionTypes.PharmaceuticalEstablishmentActionTypes.SET_SELF_EVALUATION,\n        payload: data,\n      });\n      // move to next step\n      dispatch({\n        type: ActionTypes.PharmaceuticalEstablishmentActionTypes.NEXT_STEP_NUMBER,\n      });\n    }\n  };\n\n  function onSuccess(files) {\n    console.log(files);\n  }\n\n  return (\n    /**\n     * this should be abstacted  . later i will bake a style for card only usin styled component\n     */\n    <Card>\n      <Card.Body>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Table>\n            <thead>\n              <tr>\n                <th>Description</th>\n                <th>Yes</th>\n                <th>No</th>\n                <th>N/a</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Id quod exercitationem\n                  reiciendis fugiat et esse enim, qui laborum dignissimos, saepe voluptas error\n                  alias, possimus harum aut repellat. In, fugit delectus!\n                </td>\n                <td>\n                  <div className=\"radioButtons\">\n                    <div className=\"form-check\">\n                      <label className=\"noText\" htmlFor=\"q1-y\">\n                        <input\n                          name=\"q1\"\n                          type=\"radio\"\n                          id=\"q1-y\"\n                          className=\"form-check-input\"\n                          value=\"yes\"\n                          ref={register}\n                        />\n                        <i className=\"checkMark\"> </i>\n                      </label>\n                    </div>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"radioButtons\">\n                    <div className=\"form-check\">\n                      <label className=\"noText\" htmlFor=\"q1-y\">\n                        <input\n                          name=\"q1\"\n                          type=\"radio\"\n                          id=\"q1-y\"\n                          className=\"form-check-input\"\n                          value=\"yes\"\n                          ref={register}\n                        />\n                        <i className=\"checkMark\"> </i>\n                      </label>\n                    </div>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"radioButtons\">\n                    <div className=\"form-check\">\n                      <label className=\"noText\" htmlFor=\"q1-y\">\n                        <input\n                          name=\"q1\"\n                          type=\"radio\"\n                          id=\"q1-y\"\n                          className=\"form-check-input\"\n                          value=\"yes\"\n                          ref={register}\n                        />\n                        <i className=\"checkMark\"> </i>\n                      </label>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n          <Row className=\"justify-content-center\">\n            <Button variant=\"success\" size=\"lg\" className=\"submittion-btn\" type=\"submit\">\n              <strong>Go To Attachment</strong>\n            </Button>\n          </Row>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SelfEvaluationComponent;\n","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/partner-details/partner-details.tsx",["251","252"],"import React, { useState } from \"react\";\nimport { Image, Card, Table, Container, Row, Modal, Button } from \"react-bootstrap\";\nimport \"./partner-details.scss\";\nimport \"../shared/shared.scss\";\nimport AddPartnerComponent from \"./add-partner/add-partner\";\n\n// Import images\nimport add from \"../../../../assets/add.svg\";\nimport leftArrow from \"../../../../assets/leftArrow.svg\";\nimport pen from \"../../../../assets/editPen.svg\";\n\nconst PartnerDetailsComponent = () => {\n  const [show, setShow] = useState(false);\n  return (\n    /**\n     * this should be abstacted  . later i will bake a style for card only usin styled component\n     */\n    <Container fluid>\n      <Card>\n        <Card.Body>\n          <Row>\n            <div className=\"addpartnerBtn\">\n              <Image src={add} onClick={() => setShow(!show)} />\n              <p> add Partner</p>\n            </div>\n          </Row>\n          <Modal show={show} onHide={() => setShow(!show)} backdrop=\"static\" keyboard={false}>\n            <Modal.Header closeButton>\n              <Modal.Title>\n                <div className=\"back\">\n                  <Image src={leftArrow} onClick={() => setShow(!show)} />\n                </div>\n                <div className=\"title\">\n                  <h1> add new Partner</h1>\n                </div>\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <AddPartnerComponent />\n            </Modal.Body>\n          </Modal>\n          <Row>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Full Name _EN</th>\n                  <th>Full Name _AR</th>\n                  <th>Emirates ID</th>\n                  <th>Passport NO</th>\n                  <th>Nationality</th>\n                  <th> </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Mohamed Elzayat</td>\n                  <td>محمد الزيات</td>\n                  <td>12313-1231-456</td>\n                  <td>#number</td>\n                  <td>Nationality</td>\n                  <td>\n                    <Image src={pen} />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>Mohamed Elzayat</td>\n                  <td>محمد الزيات</td>\n                  <td>12313-1231-456</td>\n                  <td>#number</td>\n                  <td>Nationality</td>\n                  <td>\n                    <Image src={pen} />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>Mohamed Elzayat</td>\n                  <td>محمد الزيات</td>\n                  <td>12313-1231-456</td>\n                  <td>#number</td>\n                  <td>Nationality</td>\n                  <td>\n                    <Image src={pen} />\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n          </Row>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default PartnerDetailsComponent;\n","/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/actions-types.ts",[],"/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/self-evaluation.tsx",[],"/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/partner-details.tsx",[],"/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/step-number.tsx",[],"/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/owner-details.tsx",[],"/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/location-information.tsx",[],"/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/contact-information.tsx",[],"/home/t0ni/Desktop/intersec/src/redux/reducers/pharmaceutical-establishment/establishment-information.tsx",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/self-evaluation/self-evaluation-helper.ts",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/partner-details/add-partner/add-partner.tsx",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/owner-detail/owner-detail-helper.ts",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/location-inforamtion/location-information-helper.ts",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/contact-inforamtion/contact-information-helper.ts",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/etablishment-inforamtion/establishment-information-helper.ts",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/partner-details/add-partner/add-partner-helper.ts",[],"/home/t0ni/Desktop/intersec/src/components/submission-buttons/submission-with-cancel.tsx",[],"/home/t0ni/Desktop/intersec/src/components/submission-buttons/submission.tsx",[],"/home/t0ni/Desktop/intersec/src/components/attachment/upload-options/upload-options.tsx",[],"/home/t0ni/Desktop/intersec/src/components/attachment/drag-area/drag-area.tsx",[],{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":3,"column":10,"nodeType":"271","messageId":"272","endLine":3,"endColumn":16},{"ruleId":"273","severity":1,"message":"270","line":3,"column":10,"nodeType":"271","messageId":"272","endLine":3,"endColumn":16},{"ruleId":"269","severity":1,"message":"274","line":4,"column":25,"nodeType":"271","messageId":"272","endLine":4,"endColumn":30},{"ruleId":"273","severity":1,"message":"274","line":4,"column":25,"nodeType":"271","messageId":"272","endLine":4,"endColumn":30},{"ruleId":"269","severity":1,"message":"275","line":4,"column":32,"nodeType":"271","messageId":"272","endLine":4,"endColumn":38},{"ruleId":"273","severity":1,"message":"275","line":4,"column":32,"nodeType":"271","messageId":"272","endLine":4,"endColumn":38},{"ruleId":"269","severity":1,"message":"276","line":12,"column":8,"nodeType":"271","messageId":"272","endLine":12,"endColumn":41},{"ruleId":"273","severity":1,"message":"276","line":12,"column":8,"nodeType":"271","messageId":"272","endLine":12,"endColumn":41},{"ruleId":"269","severity":1,"message":"277","line":13,"column":8,"nodeType":"271","messageId":"272","endLine":13,"endColumn":35},{"ruleId":"273","severity":1,"message":"277","line":13,"column":8,"nodeType":"271","messageId":"272","endLine":13,"endColumn":35},{"ruleId":"269","severity":1,"message":"278","line":14,"column":8,"nodeType":"271","messageId":"272","endLine":14,"endColumn":42},{"ruleId":"273","severity":1,"message":"278","line":14,"column":8,"nodeType":"271","messageId":"272","endLine":14,"endColumn":42},{"ruleId":"279","severity":1,"message":"280","line":37,"column":13,"nodeType":"281","endLine":37,"endColumn":16},{"ruleId":"269","severity":1,"message":"270","line":3,"column":43,"nodeType":"271","messageId":"272","endLine":3,"endColumn":49},{"ruleId":"273","severity":1,"message":"270","line":3,"column":43,"nodeType":"271","messageId":"272","endLine":3,"endColumn":49},{"ruleId":"269","severity":1,"message":"282","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":25},{"ruleId":"273","severity":1,"message":"282","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":25},{"ruleId":"269","severity":1,"message":"277","line":11,"column":8,"nodeType":"271","messageId":"272","endLine":11,"endColumn":35},{"ruleId":"273","severity":1,"message":"277","line":11,"column":8,"nodeType":"271","messageId":"272","endLine":11,"endColumn":35},{"ruleId":"269","severity":1,"message":"283","line":12,"column":8,"nodeType":"271","messageId":"272","endLine":12,"endColumn":36},{"ruleId":"273","severity":1,"message":"283","line":12,"column":8,"nodeType":"271","messageId":"272","endLine":12,"endColumn":36},{"ruleId":"269","severity":1,"message":"284","line":13,"column":8,"nodeType":"271","messageId":"272","endLine":13,"endColumn":28},{"ruleId":"273","severity":1,"message":"284","line":13,"column":8,"nodeType":"271","messageId":"272","endLine":13,"endColumn":28},{"ruleId":"269","severity":1,"message":"285","line":14,"column":8,"nodeType":"271","messageId":"272","endLine":14,"endColumn":31},{"ruleId":"273","severity":1,"message":"285","line":14,"column":8,"nodeType":"271","messageId":"272","endLine":14,"endColumn":31},{"ruleId":"269","severity":1,"message":"286","line":25,"column":10,"nodeType":"271","messageId":"272","endLine":25,"endColumn":23},{"ruleId":"273","severity":1,"message":"286","line":25,"column":10,"nodeType":"271","messageId":"272","endLine":25,"endColumn":23},{"ruleId":"269","severity":1,"message":"287","line":25,"column":25,"nodeType":"271","messageId":"272","endLine":25,"endColumn":41},{"ruleId":"273","severity":1,"message":"287","line":25,"column":25,"nodeType":"271","messageId":"272","endLine":25,"endColumn":41},{"ruleId":"269","severity":1,"message":"288","line":26,"column":10,"nodeType":"271","messageId":"272","endLine":26,"endColumn":24},{"ruleId":"273","severity":1,"message":"288","line":26,"column":10,"nodeType":"271","messageId":"272","endLine":26,"endColumn":24},{"ruleId":"269","severity":1,"message":"289","line":26,"column":26,"nodeType":"271","messageId":"272","endLine":26,"endColumn":54},{"ruleId":"273","severity":1,"message":"289","line":26,"column":26,"nodeType":"271","messageId":"272","endLine":26,"endColumn":54},{"ruleId":"269","severity":1,"message":"290","line":27,"column":10,"nodeType":"271","messageId":"272","endLine":27,"endColumn":21},{"ruleId":"273","severity":1,"message":"290","line":27,"column":10,"nodeType":"271","messageId":"272","endLine":27,"endColumn":21},{"ruleId":"269","severity":1,"message":"291","line":27,"column":23,"nodeType":"271","messageId":"272","endLine":27,"endColumn":37},{"ruleId":"273","severity":1,"message":"291","line":27,"column":23,"nodeType":"271","messageId":"272","endLine":27,"endColumn":37},{"ruleId":"269","severity":1,"message":"292","line":28,"column":10,"nodeType":"271","messageId":"272","endLine":28,"endColumn":23},{"ruleId":"273","severity":1,"message":"292","line":28,"column":10,"nodeType":"271","messageId":"272","endLine":28,"endColumn":23},{"ruleId":"269","severity":1,"message":"293","line":28,"column":25,"nodeType":"271","messageId":"272","endLine":28,"endColumn":41},{"ruleId":"273","severity":1,"message":"293","line":28,"column":25,"nodeType":"271","messageId":"272","endLine":28,"endColumn":41},{"ruleId":"294","severity":1,"message":"295","line":41,"column":5,"nodeType":"296","messageId":"297","endLine":41,"endColumn":16},{"ruleId":"279","severity":1,"message":"298","line":216,"column":25,"nodeType":"281","endLine":216,"endColumn":36},{"ruleId":"269","severity":1,"message":"270","line":3,"column":10,"nodeType":"271","messageId":"272","endLine":3,"endColumn":16},{"ruleId":"273","severity":1,"message":"270","line":3,"column":10,"nodeType":"271","messageId":"272","endLine":3,"endColumn":16},{"ruleId":"269","severity":1,"message":"299","line":3,"column":46,"nodeType":"271","messageId":"272","endLine":3,"endColumn":49},{"ruleId":"273","severity":1,"message":"299","line":3,"column":46,"nodeType":"271","messageId":"272","endLine":3,"endColumn":49},{"ruleId":"269","severity":1,"message":"300","line":13,"column":8,"nodeType":"271","messageId":"272","endLine":13,"endColumn":13},{"ruleId":"273","severity":1,"message":"300","line":13,"column":8,"nodeType":"271","messageId":"272","endLine":13,"endColumn":13},{"ruleId":"269","severity":1,"message":"270","line":3,"column":10,"nodeType":"271","messageId":"272","endLine":3,"endColumn":16},{"ruleId":"273","severity":1,"message":"270","line":3,"column":10,"nodeType":"271","messageId":"272","endLine":3,"endColumn":16},{"ruleId":"269","severity":1,"message":"301","line":3,"column":35,"nodeType":"271","messageId":"272","endLine":3,"endColumn":40},{"ruleId":"273","severity":1,"message":"301","line":3,"column":35,"nodeType":"271","messageId":"272","endLine":3,"endColumn":40},{"ruleId":"269","severity":1,"message":"299","line":3,"column":42,"nodeType":"271","messageId":"272","endLine":3,"endColumn":45},{"ruleId":"273","severity":1,"message":"299","line":3,"column":42,"nodeType":"271","messageId":"272","endLine":3,"endColumn":45},{"ruleId":"269","severity":1,"message":"300","line":15,"column":8,"nodeType":"271","messageId":"272","endLine":15,"endColumn":13},{"ruleId":"273","severity":1,"message":"300","line":15,"column":8,"nodeType":"271","messageId":"272","endLine":15,"endColumn":13},{"ruleId":"269","severity":1,"message":"270","line":3,"column":10,"nodeType":"271","messageId":"272","endLine":3,"endColumn":16},{"ruleId":"273","severity":1,"message":"270","line":3,"column":10,"nodeType":"271","messageId":"272","endLine":3,"endColumn":16},{"ruleId":"269","severity":1,"message":"302","line":3,"column":29,"nodeType":"271","messageId":"272","endLine":3,"endColumn":38},{"ruleId":"273","severity":1,"message":"302","line":3,"column":29,"nodeType":"271","messageId":"272","endLine":3,"endColumn":38},{"ruleId":"269","severity":1,"message":"299","line":3,"column":53,"nodeType":"271","messageId":"272","endLine":3,"endColumn":56},{"ruleId":"273","severity":1,"message":"299","line":3,"column":53,"nodeType":"271","messageId":"272","endLine":3,"endColumn":56},{"ruleId":"269","severity":1,"message":"300","line":7,"column":8,"nodeType":"271","messageId":"272","endLine":7,"endColumn":13},{"ruleId":"273","severity":1,"message":"300","line":7,"column":8,"nodeType":"271","messageId":"272","endLine":7,"endColumn":13},{"ruleId":"269","severity":1,"message":"303","line":16,"column":35,"nodeType":"271","messageId":"272","endLine":16,"endColumn":41},{"ruleId":"273","severity":1,"message":"303","line":16,"column":35,"nodeType":"271","messageId":"272","endLine":16,"endColumn":41},{"ruleId":"269","severity":1,"message":"304","line":35,"column":12,"nodeType":"271","messageId":"272","endLine":35,"endColumn":21},{"ruleId":"273","severity":1,"message":"304","line":35,"column":12,"nodeType":"271","messageId":"272","endLine":35,"endColumn":21},{"ruleId":"294","severity":1,"message":"295","line":36,"column":5,"nodeType":"296","messageId":"297","endLine":36,"endColumn":16},{"ruleId":"269","severity":1,"message":"270","line":2,"column":53,"nodeType":"271","messageId":"272","endLine":2,"endColumn":59},{"ruleId":"273","severity":1,"message":"270","line":2,"column":53,"nodeType":"271","messageId":"272","endLine":2,"endColumn":59},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"jsx-a11y/accessible-emoji",[],"lines-around-directive",["307"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'Route' is defined but never used.","'Switch' is defined but never used.","'EstablishmentInformationComponent' is defined but never used.","'ContactInformationComponent' is defined but never used.","'PharamaceuticalEstablishmentScreen' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'LocationInformationComponent' is defined but never used.","'OwnerDetailComponent' is defined but never used.","'PartnerDetailsComponent' is defined but never used.","'isEditContact' is assigned a value but never used.","'setIsEditContact' is assigned a value but never used.","'isEditLocation' is assigned a value but never used.","'setIsEditLocationInformation' is assigned a value but never used.","'isEditOwner' is assigned a value but never used.","'setIsEditOwner' is assigned a value but never used.","'isEditPartner' is assigned a value but never used.","'setIsEditPartner' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Row' is defined but never used.","'arrow' is defined but never used.","'Image' is defined but never used.","'Container' is defined but never used.","'errors' is assigned a value but never used.","'onSuccess' is defined but never used.","no-global-assign","no-unsafe-negation","padding-line-between-statements"]