[{"/home/t0ni/Desktop/intersec/src/index.tsx":"1","/home/t0ni/Desktop/intersec/src/reportWebVitals.ts":"2","/home/t0ni/Desktop/intersec/src/App.tsx":"3","/home/t0ni/Desktop/intersec/src/components/page-header/page-header.tsx":"4","/home/t0ni/Desktop/intersec/src/components/nav-bar/nav-bar.tsx":"5","/home/t0ni/Desktop/intersec/src/components/footer/footer.tsx":"6","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/pharamaceutical-establishment.tsx":"7","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/etablishment-inforamtion/establishment-information.tsx":"8","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/owner-detail/owner-detail.tsx":"9","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/contact-inforamtion/contact-information.tsx":"10","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/etablishment-inforamtion/establishment-information-helper.ts":"11","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/contact-inforamtion/contact-information-helper.ts":"12","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/location-inforamtion/location-information.tsx":"13","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/location-inforamtion/location-information-helper.ts":"14","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/owner-detail/owner-detail-helper.ts":"15"},{"size":500,"mtime":1607163764022,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1607093476651,"results":"18","hashOfConfig":"17"},{"size":1324,"mtime":1607102651923,"results":"19","hashOfConfig":"17"},{"size":875,"mtime":1607093476343,"results":"20","hashOfConfig":"17"},{"size":4120,"mtime":1607096617807,"results":"21","hashOfConfig":"17"},{"size":1257,"mtime":1607187175162,"results":"22","hashOfConfig":"17"},{"size":4140,"mtime":1607186858739,"results":"23","hashOfConfig":"17"},{"size":4479,"mtime":1607184931763,"results":"24","hashOfConfig":"17"},{"size":16017,"mtime":1607190629285,"results":"25","hashOfConfig":"17"},{"size":8129,"mtime":1607185006152,"results":"26","hashOfConfig":"17"},{"size":584,"mtime":1607174817299,"results":"27","hashOfConfig":"17"},{"size":1007,"mtime":1607177683066,"results":"28","hashOfConfig":"17"},{"size":5893,"mtime":1607187450310,"results":"29","hashOfConfig":"17"},{"size":736,"mtime":1607187295463,"results":"30","hashOfConfig":"17"},{"size":1639,"mtime":1607190219428,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"tubce2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/t0ni/Desktop/intersec/src/index.tsx",[],["68","69","70","71","72","73","74","75"],"/home/t0ni/Desktop/intersec/src/reportWebVitals.ts",[],"/home/t0ni/Desktop/intersec/src/App.tsx",["76","77","78","79","80","81"],"import React from \"react\";\nimport \"./App.scss\";\nimport { Button } from \"react-bootstrap\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { faCheckSquare, faCoffee, faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\n\nimport NavBarComponent from \"./components/nav-bar/nav-bar\";\nimport PageHeaderComponent from \"./components/page-header/page-header\";\nimport EstablishmentInformationComponent from \"./components/screens/pharamaceutical-establishment/etablishment-inforamtion/establishment-information\";\nimport ContactInformationComponent from \"./components/screens/pharamaceutical-establishment/contact-inforamtion/contact-information\";\nimport PharamaceuticalEstablishmentScreen from \"./components/screens/pharamaceutical-establishment/pharamaceutical-establishment\";\nimport FooterComponent from \"./components/footer/footer\";\n\nlibrary.add(fab, faCheckSquare, faCoffee, faVolumeUp);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBarComponent />\n      <PageHeaderComponent />\n\n      <PharamaceuticalEstablishmentScreen />\n      <FooterComponent />\n      {/* <Button variant=\"primary\">Primary</Button>{' '}\n\n      <Button variant=\"primary\" className=\"custom_btn\">Primary</Button>{' '} */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/t0ni/Desktop/intersec/src/components/page-header/page-header.tsx",[],"/home/t0ni/Desktop/intersec/src/components/nav-bar/nav-bar.tsx",["82"],"import React from \"react\";\nimport \"./nav-bar.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMicrophone,\n  faPhoneAlt,\n  faQuestionCircle,\n  faSearch,\n  faSitemap,\n  faVolumeUp,\n  faLowVision,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Badge, Dropdown, Nav, Navbar, Image } from \"react-bootstrap\";\nimport logo from \"../../logo.png\";\n\n// Import images\nimport name from \"../../assets/name.jpg\";\nimport bell from \"../../assets/bell.png\";\n\nexport default function NavBarComponent() {\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"light\" bg=\"light\" sticky=\"top\">\n      <Navbar.Brand href=\"#home\">\n        <img\n          src={logo}\n          width=\"200\"\n          height=\"50\"\n          className=\"d-inline-block align-top ml-5\"\n          alt=\"React Bootstrap logo\"\n        />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse className=\"justify-content-end\" id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\" />\n        <Nav>\n          <div className=\"toggleLang\">\n            <a>عربي</a>\n          </div>\n          <Nav className=\"headerIcons\">\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon icon={faVolumeUp} size=\"sm\" color=\"black\" className=\"mr-2 ml-2\" />\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon icon={faSitemap} size=\"sm\" color=\"black\" className=\"mr-2 ml-2\" />\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon icon={faPhoneAlt} size=\"sm\" color=\"black\" className=\"mr-2 ml-2\" />\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon\n                  icon={faQuestionCircle}\n                  size=\"sm\"\n                  color=\"black\"\n                  className=\"mr-2 ml-2\"\n                />\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon icon={faLowVision} size=\"sm\" color=\"black\" className=\"mr-2 ml-2\" />\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon icon={faSearch} size=\"sm\" color=\"black\" className=\"mr-2 ml-2\" />\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"/home\">\n                <FontAwesomeIcon\n                  icon={faMicrophone}\n                  size=\"sm\"\n                  color=\"black\"\n                  className=\"mr-2 ml-2\"\n                />\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n          {/* Notifications drop menu */}\n          <Dropdown>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"notifications\">\n              <Image src={bell} />\n              <Badge pill variant=\"danger\">\n                4\n              </Badge>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item href=\"#/action-1\">test action</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-2\">test Another action</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-3\">test Something else</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          {/* User drop menu */}\n          <Dropdown>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"user\">\n              <strong>User Name</strong>\n              <Image src={name} roundedCircle />\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item href=\"#/action-1\">test action</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-2\">test Another action</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-3\">test Something else</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","/home/t0ni/Desktop/intersec/src/components/footer/footer.tsx",["83","84"],"import React from \"react\";\nimport \"./footer.scss\";\nimport { Navbar, Image, ProgressBar, Row, Button } from \"react-bootstrap\";\n\n// Import images\nimport applicationIc from \"../../assets/applicationIc.png\";\nimport attachmentIc from \"../../assets/attachmentIc.png\";\nimport previewIc from \"../../assets/previewIc.png\";\nimport info from \"../../assets/info.png\";\nimport flag from \"../../assets/flag.png\";\n\nexport default function FooterComponent() {\n  return (\n    <Navbar expand=\"lg\" fixed=\"bottom\" className=\"footer\">\n      <div className=\"stickyIcons\">\n        <Image src={info} className=\"infoIc\" />\n        <Image src={flag} className=\"flagIc\" />\n      </div>\n      <ProgressBar variant=\"success\" now={20} className=\"progress\" />\n      <Row className=\"statistics-container\">\n        <div>\n          <Image src={applicationIc} />\n          <span className=\"active\">Application form</span>\n        </div>\n        <div>\n          <Image src={attachmentIc} />\n          <span>Attachement</span>\n        </div>\n        <div>\n          <Image src={previewIc} />\n          <span>Preview </span>\n        </div>\n        <div className=\"complete\">\n          <span>Complete progress</span>\n          <strong>8 %</strong>\n        </div>\n      </Row>\n    </Navbar>\n  );\n}\n","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/pharamaceutical-establishment.tsx",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/etablishment-inforamtion/establishment-information.tsx",["85","86","87","88"],"import React from \"react\";\nimport { Button, Card, Col, Container, Form, Image, Row } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { FormInputsInterface, formSchema } from \"./establishment-information-helper\";\nimport arrow from \"../../../../assets/arrow.png\";\nimport \"./establishment-information.scss\";\n\nconst EstablishmentInformationComponent = () => {\n  const { register, handleSubmit, errors, formState } = useForm({\n    resolver: yupResolver(formSchema),\n    mode: \"all\",\n  });\n\n  const onSubmit = (data: FormInputsInterface) => {\n    if (formState.isValid) {\n      // eslint-disable-next-line no-alert\n      alert(\"first form is valid and submited\");\n    }\n    // eslint-disable-next-line no-console\n    console.log(data);\n  };\n\n  return (\n    /**\n     * this should be abstacted  . later i will bake a style for card only usin styled component\n     */\n    <Card>\n      <Card.Body>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"establishmentName\">\n              <Form.Label>\n                Establishment Name <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\" Establishment Name\"\n                name=\"establishmentName\"\n                ref={register}\n                isValid={formState.touched.establishmentName && !errors.establishmentName}\n                isInvalid={errors.establishmentName}\n              />\n              <span className=\"text-danger\">{errors.establishmentName?.message}</span>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridPassword\">\n              <Form.Label>\n                Establishment Name (Arabic) <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\" Establishment Name\"\n                name=\"establishmentNameArabic\"\n                ref={register}\n                isValid={\n                  formState.touched.establishmentNameArabic && !errors.establishmentNameArabic\n                }\n                isInvalid={errors.establishmentNameArabic}\n              />\n              <span className=\"text-danger\">{errors.establishmentNameArabic?.message}</span>\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>\n                Establishment Type <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"establishmentType\"\n                ref={register}\n                isValid={formState.touched.establishmentType && !errors.establishmentType}\n                isInvalid={errors.establishmentType}\n              >\n                <option disabled selected value=\"\">\n                  Establishment Type\n                </option>\n                <option> Establishment Type 1</option>\n                <option> Establishment Type 2</option>\n                <option> Establishment Type 3</option>\n              </Form.Control>\n              <span className=\"text-danger\">{errors.establishmentType?.message}</span>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>\n                Category <span className=\"required\">*</span>\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"Category\"\n                ref={register}\n                isValid={formState.touched.Category && !errors.Category}\n                isInvalid={errors.Category}\n              >\n                <option disabled selected value=\"\">\n                  Category\n                </option>\n                <option>Category 1 </option>\n                <option>Category 2 </option>\n                <option>Category 3 </option>\n              </Form.Control>\n              <span className=\"text-danger\">{errors.Category?.message}</span>\n            </Form.Group>\n          </Form.Row>\n          <Button variant=\"success\" size=\"lg\" className=\"submittion-btn\" type=\"submit\">\n            <strong>Next</strong>\n            <Image src={arrow} className=\"submittion-btn__img\" />\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default EstablishmentInformationComponent;\n","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/owner-detail/owner-detail.tsx",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/contact-inforamtion/contact-information.tsx",["89","90"],"import React from \"react\";\nimport { Button, Card, Col, Container, Form, Row, Image } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { FormInputsInterface, formSchema } from \"./contact-information-helper\";\n\nimport \"./contact-information.scss\";\nimport \"../shared/shared.scss\";\n\nimport email from \"../../../../assets/mail.png\";\nimport phone from \"../../../../assets/phone.png\";\nimport arrow from \"../../../../assets/arrow.png\";\n\n\nconst ContactInformationComponent = () => {\n  const { register, handleSubmit, errors, formState } = useForm({\n    resolver: yupResolver(formSchema),\n    mode: \"all\",\n  });\n\n  const onSubmit = (data: FormInputsInterface) => {\n    if (formState.isValid) {\n      // eslint-disable-next-line no-alert\n      alert(\"first form is valid and submited\");\n    }\n    // eslint-disable-next-line no-console\n    console.log(data);\n  };\n  return (\n    /**\n     * this should be abstacted  . later i will bake a style for card only usin styled component\n     */\n    <Card>\n      <Card.Body>\n        <Container>\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>Retrieve information contact from your profile</Form.Label>\n                <div className=\"radioButtons\">\n                  <div className=\"form-check\">\n                    <label htmlFor=\"getContactData\">\n                      <input\n                        name=\"getContactData\"\n                        type=\"radio\"\n                        id=\"getContactData\"\n                        className=\"form-check-input\"\n                        ref={register}\n                        value=\"yes\"\n                      />\n                      Yes\n                      <i className=\"checkMark\"> </i>\n                    </label>\n                  </div>\n                  <div className=\"form-check\">\n                    <label htmlFor=\"getContactData2\">\n                      <input\n                        name=\"getContactData\"\n                        type=\"radio\"\n                        id=\"getContactData2\"\n                        className=\"form-check-input\"\n                        value=\"no\"\n                        ref={register}\n                        checked\n                      />\n                      No\n                      <i className=\"checkMark\"> </i>\n                    </label>\n                  </div>\n                </div>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>\n                  Contact Name <span className=\"required\">*</span>{\" \"}\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\" Contact Name\"\n                  name=\"contactName\"\n                  ref={register}\n                  isValid={formState.touched.contactName && !errors.contactName}\n                  isInvalid={errors.contactName}\n                />\n                <span className=\"text-danger\">{errors.contactName?.message}</span>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Designation <span className=\"required\">*</span>{\" \"}\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\" Designation \"\n                  name=\"designation\"\n                  ref={register}\n                  isValid={formState.touched.designation && !errors.designation}\n                  isInvalid={errors.designation}\n                />\n                <span className=\"text-danger\">{errors.designation?.message}</span>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>\n                  Primary Email <span className=\"required\">*</span>{\" \"}\n                </Form.Label>\n                <div className=\"inputWithIcon\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Primary Email\"\n                    name=\"primaryEmail\"\n                    ref={register}\n                    isValid={formState.touched.primaryEmail && !errors.primaryEmail}\n                    isInvalid={errors.primaryEmail}\n                  />\n                  <Image src={email} />\n                </div>\n                <span className=\"text-danger\">{errors.primaryEmail?.message}</span>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Alternative Email <span className=\"required\">*</span>{\" \"}\n                </Form.Label>\n                <div className=\"inputWithIcon\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"  Alternative Email \"\n                    name=\"alternativeEmail\"\n                    ref={register}\n                    isValid={formState.touched.alternativeEmail && !errors.alternativeEmail}\n                    isInvalid={errors.alternativeEmail}\n                  />\n                  <Image src={email} />\n                </div>\n                <span className=\"text-danger\">{errors.alternativeEmail?.message}</span>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>\n                  Contact Number <span className=\"required\">*</span>{\" \"}\n                </Form.Label>\n                <div className=\"inputWithIcon\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\" +971 000 000 \"\n                    name=\"contactNumber\"\n                    ref={register}\n                    isValid={formState.touched.contactNumber && !errors.contactNumber}\n                    isInvalid={errors.contactNumber}\n                  />\n                  <Image src={phone} />\n                </div>\n                <span className=\"text-danger\">{errors.contactNumber?.message}</span>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>\n                  Alternative Contact Number <span className=\"required\">*</span>{\" \"}\n                </Form.Label>\n                <div className=\"inputWithIcon\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\" +971 000 000  \"\n                    name=\"alternativeContactNumber\"\n                    ref={register}\n                    // eslint-disable-next-line max-len\n                    isValid={\n                      formState.touched.alternativeContactNumber && !errors.alternativeContactNumber\n                    }\n                    isInvalid={errors.alternativeContactNumber}\n                  />\n                  <Image src={phone} />\n                </div>\n                <span className=\"text-danger\">{errors.alternativeContactNumber?.message}</span>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} xs=\"6\" controlId=\"formGridEmail\">\n                <Form.Label> Fax </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Fax\"\n                  name=\"fax\"\n                  ref={register}\n                  isValid={formState.touched.fax && !errors.fax}\n                  isInvalid={errors.fax}\n                />\n                <span className=\"text-danger\">{errors.fax?.message}</span>\n              </Form.Group>\n            </Form.Row>\n            <Button variant=\"success\" size=\"lg\" className=\"submittion-btn\" type=\"submit\">\n              <strong>Next</strong>\n              <Image src={arrow} className=\"submittion-btn__img\" />\n            </Button>\n          </Form>\n        </Container>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ContactInformationComponent;\n","/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/etablishment-inforamtion/establishment-information-helper.ts",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/contact-inforamtion/contact-information-helper.ts",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/location-inforamtion/location-information.tsx",["91","92","93","94"],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/location-inforamtion/location-information-helper.ts",[],"/home/t0ni/Desktop/intersec/src/components/screens/pharamaceutical-establishment/owner-detail/owner-detail-helper.ts",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":16},{"ruleId":"115","severity":1,"message":"112","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":16},{"ruleId":"111","severity":1,"message":"116","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":41},{"ruleId":"115","severity":1,"message":"116","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":41},{"ruleId":"111","severity":1,"message":"117","line":12,"column":8,"nodeType":"113","messageId":"114","endLine":12,"endColumn":35},{"ruleId":"115","severity":1,"message":"117","line":12,"column":8,"nodeType":"113","messageId":"114","endLine":12,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":37,"column":13,"nodeType":"120","endLine":37,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":3,"column":43,"nodeType":"113","messageId":"114","endLine":3,"endColumn":49},{"ruleId":"115","severity":1,"message":"112","line":3,"column":43,"nodeType":"113","messageId":"114","endLine":3,"endColumn":49},{"ruleId":"111","severity":1,"message":"121","line":2,"column":29,"nodeType":"113","messageId":"114","endLine":2,"endColumn":38},{"ruleId":"115","severity":1,"message":"121","line":2,"column":29,"nodeType":"113","messageId":"114","endLine":2,"endColumn":38},{"ruleId":"111","severity":1,"message":"122","line":2,"column":53,"nodeType":"113","messageId":"114","endLine":2,"endColumn":56},{"ruleId":"115","severity":1,"message":"122","line":2,"column":53,"nodeType":"113","messageId":"114","endLine":2,"endColumn":56},{"ruleId":"111","severity":1,"message":"122","line":2,"column":46,"nodeType":"113","messageId":"114","endLine":2,"endColumn":49},{"ruleId":"115","severity":1,"message":"122","line":2,"column":46,"nodeType":"113","messageId":"114","endLine":2,"endColumn":49},{"ruleId":"111","severity":1,"message":"121","line":2,"column":29,"nodeType":"113","messageId":"114","endLine":2,"endColumn":38},{"ruleId":"115","severity":1,"message":"121","line":2,"column":29,"nodeType":"113","messageId":"114","endLine":2,"endColumn":38},{"ruleId":"111","severity":1,"message":"122","line":2,"column":53,"nodeType":"113","messageId":"114","endLine":2,"endColumn":56},{"ruleId":"115","severity":1,"message":"122","line":2,"column":53,"nodeType":"113","messageId":"114","endLine":2,"endColumn":56},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"jsx-a11y/accessible-emoji",[],"lines-around-directive",["125"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'EstablishmentInformationComponent' is defined but never used.","'ContactInformationComponent' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Container' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation","padding-line-between-statements"]